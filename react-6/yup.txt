

투두리스트에  react-hook-form  ,  yup  ,  @hookform/resolvers/yup  을 설치하고 적용시켜서 유효성 검사를 새롭게 만들어보자

        -->  공식 문서 꼭 확인해보자 (RHF 에서 yup 검색하면 스키마 사용법 나온다)

        -->  npm i yup
        -->  npm i @hookform/resolvers/yup  -->  yup 으로 만든 스키마를 "yupResolver" 에 등록하기 위해 설치

        ==>  yup 은 위 두개 다 설치해줘야 된다

        ==>  yup 을 사용하지 않고 RHF 만 사용하면 "react-5" 에서 했던 것처럼 태그에다가 register 를 달아준 후에 정규표현식 또는 검사요직 등을  하나하나 설정해줘야 했었다
        ==>  하지만, yup 을 사용하면 상단에다가 더 쉽게 만들 수 있는 것이다
                  (스키마라고 하는 제약조건을 상단에 작성해주고, 그 스키마를 유효성 검사할 입력창에 등록하면 된다)

        ex)  <input
                        {...register("email", {required: "이메일을 입력해주세요", minLength: 8})}
                />
                ==>  이처럼 react-hook-form 만을 사용하면 유효성 검사를 태그에 직접 적었었는데, yup 을 사용하면 그럴 필요가 없어진다

===================================================================================================


** 경로 이동 : rhf-todo  -->  pages  -->  main  -->  로그인 / 회원가입 페이지

        ==>  components 폴더의 FormInput 에 register 전달한 것도 확인해보자  -->  p 태그 안에 {error} 를 작성해준 것을 확인 가능
                (props 로 전달 받아 사용해준 것이다)  -->  register 전달받고, 또 전달받은 name 으로 RHF 를 등록해준 것을 확인할 수 있다

        -->  rhf 와 yup 을 투두리스트에 적용시킨 것을 토대로 공부해보자

        -->  sign-in-form.jsx 에 필기한 것들을 잘 확인해보자


        ==>  context-todo 복사해서 RHF 와 YUP 사용해서 유효성 검사 요직 혼자서 만들어보자  ***

        ==>  yup 모두 마쳤으면 redux 로 수업이 이어진다


===================================================================================================