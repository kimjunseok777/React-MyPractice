

- useState

        상태를 "생성" 하고, set변수명 함수로 상태를 "변경" 할 수 있다  -->  상태가 변경되면 화면을 리랜더링 한다

        ) 상태 :  리액트가 리랜더링을 위해 만든 "변수"  -->  이 변수가 바뀌면 화면을 리랜더링 한다
                     리액트에서 "가상돔" 과 실제 사용자들이 보는 "렌더트리 돔" 을 동기화할 수 있게 저장 되어있는 값이다

        ) 사용법 :  const [ 변수명, set 변수명 ] = useState( 변수의 초기값 )

                      -->  두번째 오는 "set 변수명" 은 함수인데, 상태 변수의 값을 바꾸고 싶다면 이 "setState()" 함수를 이용해야 한다



---------------------------------------------------------------------------------------------------------------------------------



- useRef

        상태가 바뀌면 화면이 리랜더링 되는데, 리랜더링 되었을 때 값이 재선언 되어서 초기화 되지 않고 유지되는 변수를 만들어 준다
        리랜더링 되면, "컴포넌트 함수" 자체를 재실행 되기 때문에, 컴포넌트 내부에 적어줬던 (선언해줬던) 값들도 다 재 선언 되면서 초기화 된다

        ) 사용법 :  const 변수명 = useRef( 변수의 초기값 )

                        -->  이렇게 선언해줄 값 자체를 useRef 로 감싸주면, 화면이 리랜더링 되어도 이 변수의 값은 초기화되지 않고 유지된다

        ) 주의할 점 :  useRef 로 선언해준 변수에 접근할 때는 반드시 "current" 로 접근해야한다
                            --> useRef 로 선언해주면 current 가 key 값인 변수로 되어있기 때문이다
                            --> ex) const b = useRef(5)
                                          console.log(b)  //  { current : 5 }
                                          console.log(b.current)  //  5

        ) 주의할 점 :  useRef 는 "상태" 가 아니다  -->  useRef 로 선언해준 변수의 값이 바뀐다고 해서 리랜더링 되지 않는다는 소리다
                            -->  상태가 변경될 때, 값지 초기화 되지 않고 "유지" 되는 변수일 뿐이다
        


---------------------------------------------------------------------------------------------------------------------------------



- useEffect

        useEffect 는 사이드이펙트 (외부효과) 이다  -->  페이지의 생명주기 동안 발생할 수 있는 "외부효과" 를 다룰 수 있는 훅 함수이다

        *  페이지가 마운트 되었을 때 (눈 앞에 어떠한 창이 나타났을 때)  -->  눈에 보인다면, 마운트 되었다고 할 수 있다

        *  페이지가 언마운트 되었을 때 (눈 앞에서 페이지가 사라졌을 때)

        *  특정 상태가 바뀌었을 때  -->  상태가 바뀌고 나서 바로 출력하는 것이 안되기 때문
            (리랜더링이 되어야만 실행해야 되는데, 이 상태 바뀐 값이 나는 필요해  -->  이럴 때는 무조건 "useEffect" 를 써야한다)

        ) ex :  




---------------------------------------------------------------------------------------------------------------------------------



- useMemo



---------------------------------------------------------------------------------------------------------------------------------



- useCallback