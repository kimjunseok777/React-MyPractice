
day07 수업은 "Layout" 만드는 것부터 시작한다
    -->  레이아웃을 만드는 이유는 "header" , "footer" , "sidebar" 와 같이 자주 바뀌지 않는 부분을 모든 주소에 디폴트한 벨류로 만들기 위함

** 경로 이동 : day07.txt  -->  layouts 폴더 만들어주고 이동해주자 (layout.jsx 만들어주자)

        -->  "Outlet" 기능을 사용해볼 것이다  (react-router-dom 에서 만든 것이다)

        Outlet : "하위" 에 있는 경로(route) 를 "상위" 에서 사용하고 싶을 때 Outlet 기능 사용

        -->  레이아웃 이라고 하는 친구는 "Main" 혹은 "Todo" 가 될 수 있는 이 컴포넌트에 상위에 있는 요소이다
        -->  상위에 있어서 얘네들 (Main 혹은 Todo 컴포넌트) 감쌀 수 있는 컴포넌트를 만들 것이다

        ***
        Outlet :
        ==>  부모가 되는 컴포넌트가 (감싸고 있는 것이 부모) 자식이 되는 컴포넌트를 보여줄 수 있는 욧소가 "Outlet" 이다
        --> TDButton 컴포넌트 만들 때 children 썻던 것과 비슷하다고 볼 수 있다

        ==>  Outlet 은 어느 용도로 쓰이냐면, "RootLayout" 이 router.js 를 감싸고 있다고 했다.
                상위 경로에 있는 이 RootLayout 에 주소에 맞는 랜더링할 수 있는 컴포넌트를 전달해줄 수 있는 역할을 하는 것이다


===================================================================================================


** 경로 이동 : layout.jsx  -->  router.jsx

        -->  layout.jsx 에서 헤더와 풋터 사이에 "Outlet" 작성 해줬으면 router.jsx 로 경로 이동 해주자

        -->  Main 컴포넌트 보여주던 router 경로를 변형을 줘보자  -->  헤더와 푸터는 고정되고, 그 사이에 <Outlet/> 만들어 줬던 컴폰넌트 RootLayout 적어주자
        -->  그리고 children 의 배열에 "객체" 로 경로(path) 와 보여줄 컴포넌트(element) 적어주자

        ==>  만약에, Main 페이지에는 헤더, 풋터가 다 있어야 하는데, Todo 페이지에는 헤더가 없어야 된다면 어떻게 해야될까? (풋터는 다 있다)
                -->  "객체" 를 생각해내야 한다  -->  url 이 key 가 되기 때문에, 그 key 에 따라서 옵션이 달라지는 것

        ** 경로 이동 :
        
                router.jsx  -->  layout.jsx  (dynamicLayoutMetadata 함수, LAYOUT_METADATA 객체 만들어주자)

                -->  useLocation 함수 만들어주자  (react-router-dom 에서 지원하는 함수)
                ==>  useLocation() 은 현재 위치한 주소를 가지고올 수 있는 함수

                -->  metadata 변수 만들어서, 태그를 보여줄지 말지 조건을 걸어줘보자 (header , footer 조건에 따라 보여주고 안보여주고 요직 작성)

                -->  metadata 는 객체를 반환 : { header : true , footer : true 또는 false }


===================================================================================================


** 경로 이동 :




-----------------------------------------------------------------------------------------------------------------------------------------------