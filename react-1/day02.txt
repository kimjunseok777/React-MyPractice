
리액트 핵심 컨셉 3가지 : 

    1. 컴포넌트
        --> HTML 코드가 굉장이 길고 가독성도 안 좋은데, 이것을 분리해서 사용할 수 있게 해주는 것

    2. 가상돔 (Virtual DOM)
        --> DOM API 에 직접 접근을 하면 요직이 복잡해진다, 하지만 가상돔을 사용하면 실제 돔은 바뀌지 않고 복잡성을 줄인다
        --> 개발자가 원하는 시점에 화면을 다시 그릴 수 있다

    3. ReRendering
        --> 컴포넌트는 HTML을 반환하는 함수로 되어있다. 이 함수 안에는 state 라고 하느 변수가 있다.
               이 변수의 값이 바뀌면 함수를 재실행한다. --> 그러면 화면을 다시그린다 (새로운 HTML 을 반환한다)

--------------------------------------------------------------------------------------------------------------------

npm uninstall -g create-react-app

    --> npm install <설치할 모듈 이름>
    --> npm uninstall <삭제할 모듈 이름>

--------------------------------------------------------------------------------------------------------------------

작업할 리액트 폴더구조 : Hooks

    - Hooks 폴더 구조

        components  -->  모든 페이지에 공유 가능한 컴포넌트들이 들어간다

        hooks  -->  상태 관련된 재사용되는 리액트 함수들이 들어간다

        pages  -->  웹 내 체이지
            main
                hooks -->  해당 페이지에서만 사용되는 리액트 함수
                components  -->  해당 페이지에서만 사용되는 컴포넌트
                index.js  -->  컴포넌트들이 조립되는 공간 (main.js 라고 해도 된다)

            todo
            board
            my-page
            ...

        utils  -->  유틸 함수들이 들어간다 (helper)

        libs  -->  라이브러리 관련된 함수나 폴더가 구성

        app.js  -->  "/"(URL 이 없으면)라고 하는 친구를 만나면 main 페이지를 보여줘라
                            "/todo" 라는 친구를 만나면 todo 페이지를 보여줘라  --> 이런 역할

                            ==>  다른 라이브러리를 사용하는 설정이나, 루트 설정
                            ==> ex) 메인이면 메인 컴포넌트 부여주고, 로그인이면 로그인 컴포넌트 부여주고 (주소 설정)

                            ==> app.js : pages 에 매칭하는 공간


--------------------------------------------------------------------------------------------------------------------

react-router-dom (라이브러리)

--------------------------------------------------------------------------------------------------------------------