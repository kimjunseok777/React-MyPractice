
앞에 day02 에서 react-router-dom 을 사용해서 주소를 감지 (path) 하여 주소에 맞는 컴포넌트를 보여줬음

----------------------------------------------------------------------------------------------------

메인 페이지에서 상세보기 페이지로 이동했다면, 상세보기 페이지에서는 코드를 작성한다면 어떠한 일을 해야할지 고민해보자.

ex)
옷 쇼핑몰 웹사이트에 접속 -> 물품 상세보기를 클릭
(junseok.com) -> (junseok.com/product)

메인 페이지 -> 상세보기 페이지 이동

백엔드에 이달의 인기 상품 목록 요청 (메인페이지에서 할거다)  -->  그럼 상세보기 페이지에서는 백엔드에 뭘 요청해야할까?

-->  상품의 "고유한 값" 을 전달하여 해당 상품의 상세한 정보 요청 (상품 상세페이지에서 요청)  -->  상품의 고유한 값 ex) product?goods=23241223
        
        이렇게 "출력" 은 정해졌다. 그럼 이제 "입력" 은 어떻게 가져올지 고민해보자. (페이지 이동이 이뤄졌는데, 내가 클릭한 "상품의 고유한 값" 어떻게 가져올 수 있을까?)

-->  react-router-dom 에는 주소에 전달된 데이터를 가지고 올 수 있는 방법이 존재하다  -->  URL Parameter (주소 매개변수)
        URL Parameter 를 사용하면 페이지와 페이지를 이동해도 데이터를 가져올 수 있다  -->  ex) 변수

-->  페이지와 페이지를 이동할 때는 가지고 있는 변수 같은 것들이 다 삭제된다 (메인 -> 상세보기 페이지 이동이 있었기 때문) --> 그럼 어떡해야할까?
        웹 브라우저에 있는 "저장소" 들을 이용해야한다 --> 그중 하나인 "URL" 을 사용할 거다 --> ex) junseok.com/product?goods=23241223
        
-->  상품의 id(key 값) 를 심어놓고, 상품을 클릭했을 때 주소(URL)가 바뀌게 하는 것이다
        junseok.com/product?goods=23241223

----------------------------------------------------------------------------------------------------

URL Parameter

    1. useSearchParams (query-string : 하나의 문자열로 표현하는 것) : 가장 많이 사용하는 방법이다

        ex) junseok.com/product?goods=23241223  -->  이렇게 하나의 문자열로 표현한다 해서 "query-string" 이다
        사용법 :
        const [searchParams, setSearchParams] = useSearchParams()
        searchParams.get("goods") // 23241223  -->  키값 (goods) 을 맞춰주면 이러한 고유한 값이 온다

    -----------------------------

    2. useParams (url-parameter 를 사용하는 방법  -->  매우 간단하다)

        ex) junseok.com/product/3123242  -->  아예 슬래시 "/" 로 구분한 것이다
        사용법 :
        path: /todo/:todoId  -->  이러면 / 뒤에 적은 값이 todo 의 id 값으로 온다
        element: <TodoPage />

        이후에 pages - todo.jsx 에서 const { todoId } = useParams() 작성해주면 "3123242" 값이 나오게 된다

----------------------------------------------------------------------------------------------------

- 데이터를 주소를 통해 전달할 수 있다

- react-router-dom 은 단순하게 URL 을 맵핑해주는 역할만 하는 것이 아니라 주소를 다루는 다양한 함수를 지원한다

----------------------------------------------------------------------------------------------------

